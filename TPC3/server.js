var http = require('http')
var url = require('url')
var axios = require('axios')
var fs = require('fs')

function genPagInicial(){
    pagHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Pagina Inicial</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
                <header class="w3-container w3-blue">
                <h1>Pagina Inicial</h1>
                </header>
                <h2><a href="/filmes">Filmes</a><h2>
                <h2><a href="/generos">Generos</a><h2>
                <h2><a href="/atores">Atores</a><h2>
        </body>
    </html>
    `
    return pagHTML
}

function genFilmes(filmes){
    pagHTML = `
    <!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8"/>
        <title>Lista de Filmes</title>
        <link rel="stylesheet" href="/w3.css">
    </head>
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-blue">
              <h1>Lista de Filmes</h1>
            </header>
            
            <div class="w3-container">
                <table class="w3-table w3-striped">
                <tr>
                        <th>ID</th>
                        <th>Nome</th>
                        <th>Ano</th>
                </tr>
                
    `
    filmes.forEach( filme => {
        pagHTML += `
        <tr>
            <td>${filme._id.$oid}</td>
            <td><a href = "filmes/${filme._id.$oid}">${filme.title}</a></td>
            
            <td>${filme.year}</td>
        </tr>
        `
    });
    pagHTML += `
            </table>
            </div>
            
            <footer class="w3-container w3-blue">
              <h5>Generated by Tiago Rodrigues</h5>
            </footer>
            
        </div>
    </body>
</html>
    `
    return pagHTML
}   


function genInfoFilme(filme){
    pagHTML = `
    <!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8"/>
        <title>Filme </title>
        <link rel="stylesheet" href="/w3.css">
    </head>
    <body>
            <header class="w3-container w3-blue">
                <h1>${filme[0].title}</h1>
            </header>
            
            <div class="w3-container">
                <h3><b> Ano: </b> ${filme[0].year}  </h3> 
    `

    pagHTML += '<h3><b>Cast:</b> </h3><ul>'
    for (let i = 0; i < filme[0].cast.length; i++){
        pagHTML += `<li><a href="/atores/${filme[0].cast[i]}">${filme[0].cast[i]}</a></li>`;
    }
    pagHTML += '</ul>'


    pagHTML += '<h3><b>Generos:</b></h3><ul>';
    for (let i = 0; i < filme[0].genres.length; i++) {
        pagHTML += `<li><a href="/generos/${filme[0].genres[i]}">${filme[0].genres[i]}</a></li>`;
    }
    pagHTML += '</ul>';

    pagHTML += `
            </div>
            
            <footer class="w3-container w3-blue">
              <h5>Generated by Tiago Rodrigues</h5>
            </footer>
            
    
    </body>
</html>
    `
    return pagHTML
}   




function genGeneros(generos){
    pagHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Generos Filmes</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Generos Filmes</h1>
                </header>
                <div class="w3-container">
                    <ul>
    `;

    generos.forEach(genero => {
        pagHTML += `
            <li><a href="/generos/${genero.nome}">${genero.nome}</a></li>
        `;
    });

    pagHTML += `
                    </ul>
                </div>
                <footer class="w3-container w3-blue">
                    <h5>Generated by Tiago Rodrigues</h5>
                </footer>
            </div>
        </body>
    </html>
    `;
    return pagHTML;
}


function genInfoGenero(genero, filmes) {
    let pagHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Filmes do Genero ${genero[0]["nome"]}</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Filmes do Genero ${genero[0]["nome"]}</h1>
                </header>
                
                <div class="w3-container">
                    <ul>
    `;

    genero[0].filmes.forEach(filmeId => {
        const filme = filmes.find(f => f._id.$oid === filmeId);
        if (filme) {
            pagHTML += `<li><a href="/filmes/${filme._id.$oid}">${filme.title}</a></li>`;
        }
    });

    pagHTML += `
                    </ul>
                </div>
                
                <footer class="w3-container w3-blue">
                    <h5>Generated by Tiago Rodrigues</h5>
                </footer>
            </div>
        </body>
    </html>
    `;
    return pagHTML;
}


function genAtores(atores) {
    pagHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Atores</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Atores</h1>
                </header>
                <div class="w3-container">
                    <ul>
    `;

    atores.forEach(ator => {
        pagHTML += `
            <li><a href="/atores/${ator.nome}">${ator.nome}</a></li>
        `;
    });

    pagHTML += `
                    </ul>
                </div>
                <footer class="w3-container w3-blue">
                    <h5>Generated by Tiago Rodrigues</h5>
                </footer>
            </div>
        </body>
    </html>
    `;
    return pagHTML;
}


function genInfoAtor(ator, filmes) {
    let pagHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Filmes do Ator ${ator[0]["nome"]}</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Filmes do Ator ${ator[0]["nome"]}</h1>
                </header>
                
                <div class="w3-container">
                    <ul>
    `;

    ator[0].filmes.forEach(filmeId => {
        const filme = filmes.find(f => f._id.$oid === filmeId);
        if (filme) {
            pagHTML += `<li><a href="/filmes/${filme._id.$oid}">${filme.title}</a></li>`;
        }
    });

    pagHTML += `
                    </ul>
                </div>
                
                <footer class="w3-container w3-blue">
                    <h5>Generated by Tiago Rodrigues</h5>
                </footer>
            </div>
        </body>
    </html>
    `;
    return pagHTML;
}







http.createServer((req,res) => {
    console.log(req.method + " " + req.url);

    var q = url.parse(req.url, true);

    if(req.url == '/'){
        res.writeHead(200, {'Content-Type' : 'text/html; charset = utf-8'})
        html = genPagInicial()
        res.write(html)
        res.end()
    } else if(req.url == '/filmes'){
        axios.get("http://localhost:3000/filmes")
        .then(resp =>{
            res.writeHead(200, {'Content-Type' : 'text/html; charset = utf-8'})
            html = genFilmes(resp.data)
            res.write(html)
            res.end()
        })
        .catch(erro => {
            res.writeHead(500, {'Content-Type' : 'text/html; charset = utf-8'})
            res.write("<p> Erro: " + erro + "</p>")
            res.end()
        })
    
    } else if(req.url.match(/\/filmes\/\w+/)){
        let id = req.url.substring(8)
        axios.get("http://localhost:3000/filmes?_id.$oid=" + id)
        .then(resp =>{
            res.writeHead(200, {'Content-Type' : 'text/html; charset = utf-8'})
            html = genInfoFilme(resp.data)
            res.write(html)
            res.end()
        })
        .catch(erro => {
            res.writeHead(500, {'Content-Type' : 'text/html; charset = utf-8'})
            res.write("<p> Erro: " + erro + "</p>")
            res.end()
        })
    
    } else if(req.url == '/generos'){
        axios.get("http://localhost:3000/generos")
        .then(resp =>{
            res.writeHead(200, {'Content-Type' : 'text/html; charset = utf-8'})
            html = genGeneros(resp.data)
            res.write(html)
            res.end()
        })
        .catch(erro => {
            res.writeHead(500, {'Content-Type' : 'text/html; charset = utf-8'})
            res.write("<p> Erro: " + erro + "</p>")
            res.end()
        })
    
    } else if (req.url.match(/\/generos\/\w+/)) {
        let generoNome = req.url.substring(9);
        axios.get("http://localhost:3000/generos?nome=" + generoNome)
        .then(resp =>{
            axios.get("http://localhost:3000/filmes")
            .then(respFilmes =>{
                res.writeHead(200, {'Content-Type' : 'text/html; charset = utf-8'})
                html = genInfoGenero(resp.data,respFilmes.data)
                res.write(html)
                res.end()
            
            })
            .catch(erro => {
                res.writeHead(500, {'Content-Type' : 'text/html; charset = utf-8'})
                res.write("<p> Erro: " + erro + "</p>")
                res.end()
            })
    })
    .catch(erro => {
        res.writeHead(500, {'Content-Type' : 'text/html; charset = utf-8'})
        res.write("<p> Erro: " + erro + "</p>")
        res.end()
    })
    } else if(req.url == '/atores'){
        axios.get("http://localhost:3000/atores")
        .then(resp =>{
            res.writeHead(200, {'Content-Type' : 'text/html; charset = utf-8'})
            html = genAtores(resp.data)
            res.write(html)
            res.end()
        })
        .catch(erro => {
            res.writeHead(500, {'Content-Type' : 'text/html; charset = utf-8'})
            res.write("<p> Erro: " + erro + "</p>")
            res.end()
        })
    
    } else if (req.url.match(/\/atores\/\w+/)) {
        let atorNome = req.url.substring(8);
        axios.get("http://localhost:3000/atores?nome=" + atorNome)
        .then(resp =>{
            axios.get("http://localhost:3000/filmes")
            .then(respFilmes =>{
                res.writeHead(200, {'Content-Type' : 'text/html; charset = utf-8'})
                html = genInfoAtor(resp.data,respFilmes.data)
                res.write(html)
                res.end()
            
            })
            .catch(erro => {
                res.writeHead(500, {'Content-Type' : 'text/html; charset = utf-8'})
                res.write("<p> Erro: " + erro + "</p>")
                res.end()
            })
    })
    .catch(erro => {
        res.writeHead(500, {'Content-Type' : 'text/html; charset = utf-8'})
        res.write("<p> Erro: " + erro + "</p>")
        res.end()
    })
    }
    else if(req.url == '/w3.css'){
        fs.readFile("w3.css",(erro,dados) =>{
            res.writeHead(200, {'Content-Type' : 'text/css; charset = utf-8'})
            res.write(dados)
            res.end()
        })
    }else{
        res.writeHead(400, {'Content-Type' : 'text/html; charset = utf-8'})
        res.write("<p>Erro: Pedido nÃ£o suportado</p>")
        res.write("<pre>" + req.url + "</pre>")
        res.end()
    }
}).listen(2024)

console.log("Servidor a escuta na porta 2024")